import 'dart:io';
//To print in one line
void print_(String s) {
  stdout.write(s);
}
// Create a 3x3 Tic-Tac-Toe board
List<List<String>> ticTacToeBoard=[['1','2','3'],['4','5','6'],['7','8','9']];
bool winner=false;
void main() {
  // Display the initial board
  printBoard(ticTacToeBoard);
  //Prepare the two players
  Player xPlayer=Player('X');
  Player oPlayer=Player('O');

  //Ask players to make a move one at a time
  startRound(xPlayer,oPlayer);
  
  
}

// Function to print the Tic-Tac-Toe board
void printBoard(List<List<String>> board) {
  
  for(int i=0; i<3;i++){
    for (int j=0;j<3;j++){
      print_('${board[i][j]} ');
      if (j!=2){
        print_('| ');
      }
      if (j+1 == 3 && i!=2){
        print_('\n');
        print_('----------\n');
      }
    }
  }
   print_('\n \n');
  
}

class Player{
    String name='';
    
    Player(this.name);
        
    // Function to set a move (X or O) on the board
    void setMove() {
      String move= this.name;
      stdout.write('Please choose a position\n');
      // Recieving the position
      String position = stdin.readLineSync()!;
      
      for(int i=0; i<3;i++){
       for (int j=0;j<3;j++){
         if (ticTacToeBoard[i][j] == position){
          ticTacToeBoard[i][j]=move;
         } 
       }
     }
    
  }
 
  
  void play(){
      this.setMove();
      printBoard(ticTacToeBoard);
      winner=checkForWinner(ticTacToeBoard,this.name);
      if (winner==true){print('\n Player ${this.name} Won!!');}
  }
}

void startRound(Player firstPlayer, Player secondPlayer){
    //Set the Tic-Tac-Toe Board
    ticTacToeBoard=[['1','2','3'],['4','5','6'],['7','8','9']];
    //Ask players to make a move one at a time
    for (int i=0;i<9;i++){
       if(i % 2 == 0) firstPlayer.play();
       else secondPlayer.play();
       if (winner == true) {
          stdout.write('Tell me if you\'d like another round? Y / N \n');
          String again = stdin.readLineSync()!;
          if (again == 'y'){startRound(firstPlayer,secondPlayer);}
          else {print('Pleased to have you, comeback soon!!'); return;}
       }
   }
 }

bool checkForWinner(List<List<String>> board, String player){
    // Check rows
  for (int i = 0; i < 3; i++) {
    if (board[i][0] == player && board[i][1] == player && board[i][2] == player) {
      return true;
    }
  }

  // Check columns
  for (int i = 0; i < 3; i++) {
    if (board[0][i] == player && board[1][i] == player && board[2][i] == player) {
      return true;
    }
  }
  // Check diagonals
  if (board[0][0] == player && board[1][1] == player && board[2][2] == player) {
    return true;
  }
  if (board[0][2] == player && board[1][1] == player && board[2][0] == player) {
    return true;
  }
  return false;
}
